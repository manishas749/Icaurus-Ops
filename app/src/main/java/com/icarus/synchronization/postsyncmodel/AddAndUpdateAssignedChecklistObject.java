/*
 * ICARUS API
 * The API allows an organization to have access to most of their ICARUS data!
 *
 * OpenAPI spec version: 2.0
 * Contact: support@icarusops.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.icarus.synchronization.postsyncmodel;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * AddAndUpdateAssignedChecklistObject
 */

public class AddAndUpdateAssignedChecklistObject extends AssignedObjects {
  public static final String SERIALIZED_NAME_UUID = "uuid";
  @SerializedName(SERIALIZED_NAME_UUID)
  private String uuid;

  public static final String SERIALIZED_NAME_CHECKLIST_ID = "checklist_id";
  @SerializedName(SERIALIZED_NAME_CHECKLIST_ID)
  private Integer checklistId;

  public static final String SERIALIZED_NAME_DEPARTMENT_ID = "department_id";
  @SerializedName(SERIALIZED_NAME_DEPARTMENT_ID)
  private Integer departmentId;

  public static final String SERIALIZED_NAME_LOCATION_ID = "location_id";
  @SerializedName(SERIALIZED_NAME_LOCATION_ID)
  private Integer locationId;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PENDING("pending"),
    
    CANCELLED("cancelled"),
    
    PENDING_APPROVAL("pending_approval"),
    
    PAUSED("paused"),
    
    COMPLETED("completed"),
    
    REJECTED("rejected"),
    
    CLOSED("closed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  /**
   * Gets or Sets assigneeType
   */
  @JsonAdapter(AssigneeTypeEnum.Adapter.class)
  public enum AssigneeTypeEnum {
    USER("user");

    private String value;

    AssigneeTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static AssigneeTypeEnum fromValue(String text) {
      for (AssigneeTypeEnum b : AssigneeTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + text + "'");
    }

    public static class Adapter extends TypeAdapter<AssigneeTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final AssigneeTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public AssigneeTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return AssigneeTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  public static final String SERIALIZED_NAME_ASSIGNEE_TYPE = "assignee_type";
  @SerializedName(SERIALIZED_NAME_ASSIGNEE_TYPE)
  private AssigneeTypeEnum assigneeType;

  public static final String SERIALIZED_NAME_USER_ID = "user_id";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private Integer userId;

  public static final String SERIALIZED_NAME_STARTED_BY_USER_ID = "started_by_user_id";
  @SerializedName(SERIALIZED_NAME_STARTED_BY_USER_ID)
  private Integer startedByUserId;

  public static final String SERIALIZED_NAME_IS_DELETED = "is_deleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_ASSIGNED_AT = "assigned_at";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_AT)
  private String assignedAt;

  public static final String SERIALIZED_NAME_DUE_AT = "due_at";
  @SerializedName(SERIALIZED_NAME_DUE_AT)
  private String dueAt;

  public static final String SERIALIZED_NAME_STARTED_AT = "started_at";
  @SerializedName(SERIALIZED_NAME_STARTED_AT)
  private String startedAt;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private String updatedAt;

  public AddAndUpdateAssignedChecklistObject uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(example = "5d899e22-7d5a-4456-a3bb-eea2e95e61ef", required = true, value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public AddAndUpdateAssignedChecklistObject checklistId(Integer checklistId) {
    this.checklistId = checklistId;
    return this;
  }

   /**
   * Get checklistId
   * @return checklistId
  **/
  @ApiModelProperty(example = "57", required = true, value = "")
  public Integer getChecklistId() {
    return checklistId;
  }

  public void setChecklistId(Integer checklistId) {
    this.checklistId = checklistId;
  }

  public AddAndUpdateAssignedChecklistObject departmentId(Integer departmentId) {
    this.departmentId = departmentId;
    return this;
  }

   /**
   * Get departmentId
   * @return departmentId
  **/
  @ApiModelProperty(example = "7", required = true, value = "")
  public Integer getDepartmentId() {
    return departmentId;
  }

  public void setDepartmentId(Integer departmentId) {
    this.departmentId = departmentId;
  }

  public AddAndUpdateAssignedChecklistObject locationId(Integer locationId) {
    this.locationId = locationId;
    return this;
  }

   /**
   * Get locationId
   * @return locationId
  **/
  @ApiModelProperty(example = "3", required = true, value = "")
  public Integer getLocationId() {
    return locationId;
  }

  public void setLocationId(Integer locationId) {
    this.locationId = locationId;
  }

  public AddAndUpdateAssignedChecklistObject status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "completed", required = true, value = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public AddAndUpdateAssignedChecklistObject assigneeType(AssigneeTypeEnum assigneeType) {
    this.assigneeType = assigneeType;
    return this;
  }

   /**
   * Get assigneeType
   * @return assigneeType
  **/
  @ApiModelProperty(example = "user", required = true, value = "")
  public AssigneeTypeEnum getAssigneeType() {
    return assigneeType;
  }

  public void setAssigneeType(AssigneeTypeEnum assigneeType) {
    this.assigneeType = assigneeType;
  }

  public AddAndUpdateAssignedChecklistObject userId(Integer userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(example = "1283", required = true, value = "")
  public Integer getUserId() {
    return userId;
  }

  public void setUserId(Integer userId) {
    this.userId = userId;
  }

  public AddAndUpdateAssignedChecklistObject startedByUserId(Integer startedByUserId) {
    this.startedByUserId = startedByUserId;
    return this;
  }

   /**
   * Get startedByUserId
   * @return startedByUserId
  **/
  @ApiModelProperty(example = "1283", required = true, value = "")
  public Integer getStartedByUserId() {
    return startedByUserId;
  }

  public void setStartedByUserId(Integer startedByUserId) {
    this.startedByUserId = startedByUserId;
  }

  public AddAndUpdateAssignedChecklistObject isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

   /**
   * Get isDeleted
   * @return isDeleted
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }

  public AddAndUpdateAssignedChecklistObject assignedAt(String assignedAt) {
    this.assignedAt = assignedAt;
    return this;
  }

   /**
   * Get assignedAt
   * @return assignedAt
  **/
  @ApiModelProperty(example = "2018-05-02 12:08:16", required = true, value = "")
  public String getAssignedAt() {
    return assignedAt;
  }

  public void setAssignedAt(String assignedAt) {
    this.assignedAt = assignedAt;
  }

  public AddAndUpdateAssignedChecklistObject dueAt(String dueAt) {
    this.dueAt = dueAt;
    return this;
  }

   /**
   * Get dueAt
   * @return dueAt
  **/
  @ApiModelProperty(example = "2018-05-02 18:29:59", required = true, value = "")
  public String getDueAt() {
    return dueAt;
  }

  public void setDueAt(String dueAt) {
    this.dueAt = dueAt;
  }

  public AddAndUpdateAssignedChecklistObject startedAt(String startedAt) {
    this.startedAt = startedAt;
    return this;
  }

   /**
   * Get startedAt
   * @return startedAt
  **/
  @ApiModelProperty(example = "2018-05-02 12:08:16", required = true, value = "")
  public String getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(String startedAt) {
    this.startedAt = startedAt;
  }

  public AddAndUpdateAssignedChecklistObject createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(example = "2018-05-02 12:08:16", required = true, value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public AddAndUpdateAssignedChecklistObject updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(example = "2018-05-02 12:09:12", required = true, value = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AddAndUpdateAssignedChecklistObject addAndUpdateAssignedChecklistObject = (AddAndUpdateAssignedChecklistObject) o;
    return Objects.equals(this.uuid, addAndUpdateAssignedChecklistObject.uuid) &&
        Objects.equals(this.checklistId, addAndUpdateAssignedChecklistObject.checklistId) &&
        Objects.equals(this.departmentId, addAndUpdateAssignedChecklistObject.departmentId) &&
        Objects.equals(this.locationId, addAndUpdateAssignedChecklistObject.locationId) &&
        Objects.equals(this.status, addAndUpdateAssignedChecklistObject.status) &&
        Objects.equals(this.assigneeType, addAndUpdateAssignedChecklistObject.assigneeType) &&
        Objects.equals(this.userId, addAndUpdateAssignedChecklistObject.userId) &&
        Objects.equals(this.startedByUserId, addAndUpdateAssignedChecklistObject.startedByUserId) &&
        Objects.equals(this.isDeleted, addAndUpdateAssignedChecklistObject.isDeleted) &&
        Objects.equals(this.assignedAt, addAndUpdateAssignedChecklistObject.assignedAt) &&
        Objects.equals(this.dueAt, addAndUpdateAssignedChecklistObject.dueAt) &&
        Objects.equals(this.startedAt, addAndUpdateAssignedChecklistObject.startedAt) &&
        Objects.equals(this.createdAt, addAndUpdateAssignedChecklistObject.createdAt) &&
        Objects.equals(this.updatedAt, addAndUpdateAssignedChecklistObject.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(uuid, checklistId, departmentId, locationId, status, assigneeType, userId, startedByUserId, isDeleted, assignedAt, dueAt, startedAt, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AddAndUpdateAssignedChecklistObject {\n");
    
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    checklistId: ").append(toIndentedString(checklistId)).append("\n");
    sb.append("    departmentId: ").append(toIndentedString(departmentId)).append("\n");
    sb.append("    locationId: ").append(toIndentedString(locationId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    assigneeType: ").append(toIndentedString(assigneeType)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    startedByUserId: ").append(toIndentedString(startedByUserId)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    assignedAt: ").append(toIndentedString(assignedAt)).append("\n");
    sb.append("    dueAt: ").append(toIndentedString(dueAt)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

