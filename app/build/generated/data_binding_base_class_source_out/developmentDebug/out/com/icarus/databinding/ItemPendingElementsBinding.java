// Generated by data binding compiler. Do not edit!
package com.icarus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.icarus.R;
import com.icarus.models.ChecklistDetailItems;
import com.icarus.viewmodels.ChecklistDetailViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemPendingElementsBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatImageView check;

  @NonNull
  public final AppCompatImageView image;

  @NonNull
  public final AppCompatTextView tvDesc;

  @NonNull
  public final AppCompatTextView tvName;

  @Bindable
  protected Integer mPosition;

  @Bindable
  protected ChecklistDetailViewModel mViewModel;

  @Bindable
  protected ChecklistDetailItems mItem;

  protected ItemPendingElementsBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatImageView check, AppCompatImageView image, AppCompatTextView tvDesc,
      AppCompatTextView tvName) {
    super(_bindingComponent, _root, _localFieldCount);
    this.check = check;
    this.image = image;
    this.tvDesc = tvDesc;
    this.tvName = tvName;
  }

  public abstract void setPosition(@Nullable Integer position);

  @Nullable
  public Integer getPosition() {
    return mPosition;
  }

  public abstract void setViewModel(@Nullable ChecklistDetailViewModel viewModel);

  @Nullable
  public ChecklistDetailViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setItem(@Nullable ChecklistDetailItems item);

  @Nullable
  public ChecklistDetailItems getItem() {
    return mItem;
  }

  @NonNull
  public static ItemPendingElementsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_pending_elements, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemPendingElementsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemPendingElementsBinding>inflateInternal(inflater, R.layout.item_pending_elements, root, attachToRoot, component);
  }

  @NonNull
  public static ItemPendingElementsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_pending_elements, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemPendingElementsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemPendingElementsBinding>inflateInternal(inflater, R.layout.item_pending_elements, null, false, component);
  }

  public static ItemPendingElementsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemPendingElementsBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemPendingElementsBinding)bind(component, view, R.layout.item_pending_elements);
  }
}
