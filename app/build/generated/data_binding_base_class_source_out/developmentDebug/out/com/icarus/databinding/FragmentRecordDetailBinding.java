// Generated by data binding compiler. Do not edit!
package com.icarus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.FrameLayout;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.icarus.R;
import com.icarus.models.CheckListStepAttributeItems;
import com.icarus.viewmodels.ChecklistExecutionViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentRecordDetailBinding extends ViewDataBinding {
  @NonNull
  public final Button btnSubmit;

  @NonNull
  public final AppCompatTextView description;

  @NonNull
  public final FrameLayout editAttribute;

  @NonNull
  public final AppCompatTextView label;

  @NonNull
  public final LinearLayout linear;

  @Bindable
  protected CheckListStepAttributeItems mItem;

  @Bindable
  protected Integer mAttributeNo;

  @Bindable
  protected ChecklistExecutionViewModel mViewModel;

  protected FragmentRecordDetailBinding(Object _bindingComponent, View _root, int _localFieldCount,
      Button btnSubmit, AppCompatTextView description, FrameLayout editAttribute,
      AppCompatTextView label, LinearLayout linear) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnSubmit = btnSubmit;
    this.description = description;
    this.editAttribute = editAttribute;
    this.label = label;
    this.linear = linear;
  }

  public abstract void setItem(@Nullable CheckListStepAttributeItems item);

  @Nullable
  public CheckListStepAttributeItems getItem() {
    return mItem;
  }

  public abstract void setAttributeNo(@Nullable Integer attributeNo);

  @Nullable
  public Integer getAttributeNo() {
    return mAttributeNo;
  }

  public abstract void setViewModel(@Nullable ChecklistExecutionViewModel viewModel);

  @Nullable
  public ChecklistExecutionViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentRecordDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_record_detail, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRecordDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentRecordDetailBinding>inflateInternal(inflater, R.layout.fragment_record_detail, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentRecordDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_record_detail, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentRecordDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentRecordDetailBinding>inflateInternal(inflater, R.layout.fragment_record_detail, null, false, component);
  }

  public static FragmentRecordDetailBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentRecordDetailBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentRecordDetailBinding)bind(component, view, R.layout.fragment_record_detail);
  }
}
