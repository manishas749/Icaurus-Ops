// Generated by data binding compiler. Do not edit!
package com.icarus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import com.icarus.R;
import com.icarus.workorder.viewmodels.WorkOrderCompleteViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityWorkOrderCompleteBinding extends ViewDataBinding {
  @NonNull
  public final TextView cancel;

  @NonNull
  public final TextView completeWorkOrder;

  @NonNull
  public final TextView create;

  @NonNull
  public final TextInputEditText etDescription;

  @NonNull
  public final TextInputLayout etDescriptionView;

  @NonNull
  public final LinearLayout galleryWidget;

  @NonNull
  public final ConstraintLayout mainContent;

  @NonNull
  public final NestedScrollView scroll;

  @Bindable
  protected WorkOrderCompleteViewModel mViewModel;

  protected ActivityWorkOrderCompleteBinding(Object _bindingComponent, View _root,
      int _localFieldCount, TextView cancel, TextView completeWorkOrder, TextView create,
      TextInputEditText etDescription, TextInputLayout etDescriptionView,
      LinearLayout galleryWidget, ConstraintLayout mainContent, NestedScrollView scroll) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cancel = cancel;
    this.completeWorkOrder = completeWorkOrder;
    this.create = create;
    this.etDescription = etDescription;
    this.etDescriptionView = etDescriptionView;
    this.galleryWidget = galleryWidget;
    this.mainContent = mainContent;
    this.scroll = scroll;
  }

  public abstract void setViewModel(@Nullable WorkOrderCompleteViewModel viewModel);

  @Nullable
  public WorkOrderCompleteViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static ActivityWorkOrderCompleteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_work_order_complete, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityWorkOrderCompleteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityWorkOrderCompleteBinding>inflateInternal(inflater, R.layout.activity_work_order_complete, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityWorkOrderCompleteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_work_order_complete, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityWorkOrderCompleteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityWorkOrderCompleteBinding>inflateInternal(inflater, R.layout.activity_work_order_complete, null, false, component);
  }

  public static ActivityWorkOrderCompleteBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityWorkOrderCompleteBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ActivityWorkOrderCompleteBinding)bind(component, view, R.layout.activity_work_order_complete);
  }
}
