// Generated by data binding compiler. Do not edit!
package com.icarus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.icarus.R;
import com.icarus.customviews.CustomSeekBar;
import com.icarus.models.ChecklistDetailItems;
import com.icarus.viewmodels.ChecklistExecutionViewModel;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class FragmentDecisionExecutionBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatButton btnSkipDefer;

  @NonNull
  public final RelativeLayout containerDecisionSeekbar;

  @NonNull
  public final CustomSeekBar seekBar;

  @NonNull
  public final AppCompatTextView txtDecision;

  @NonNull
  public final TextView txtDecisionNo;

  @NonNull
  public final TextView txtDecisionYes;

  @Bindable
  protected ChecklistDetailItems mItem;

  @Bindable
  protected ChecklistExecutionViewModel mViewModel;

  protected FragmentDecisionExecutionBinding(Object _bindingComponent, View _root,
      int _localFieldCount, AppCompatButton btnSkipDefer, RelativeLayout containerDecisionSeekbar,
      CustomSeekBar seekBar, AppCompatTextView txtDecision, TextView txtDecisionNo,
      TextView txtDecisionYes) {
    super(_bindingComponent, _root, _localFieldCount);
    this.btnSkipDefer = btnSkipDefer;
    this.containerDecisionSeekbar = containerDecisionSeekbar;
    this.seekBar = seekBar;
    this.txtDecision = txtDecision;
    this.txtDecisionNo = txtDecisionNo;
    this.txtDecisionYes = txtDecisionYes;
  }

  public abstract void setItem(@Nullable ChecklistDetailItems item);

  @Nullable
  public ChecklistDetailItems getItem() {
    return mItem;
  }

  public abstract void setViewModel(@Nullable ChecklistExecutionViewModel viewModel);

  @Nullable
  public ChecklistExecutionViewModel getViewModel() {
    return mViewModel;
  }

  @NonNull
  public static FragmentDecisionExecutionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_decision_execution, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDecisionExecutionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentDecisionExecutionBinding>inflateInternal(inflater, R.layout.fragment_decision_execution, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentDecisionExecutionBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_decision_execution, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentDecisionExecutionBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentDecisionExecutionBinding>inflateInternal(inflater, R.layout.fragment_decision_execution, null, false, component);
  }

  public static FragmentDecisionExecutionBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentDecisionExecutionBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (FragmentDecisionExecutionBinding)bind(component, view, R.layout.fragment_decision_execution);
  }
}
