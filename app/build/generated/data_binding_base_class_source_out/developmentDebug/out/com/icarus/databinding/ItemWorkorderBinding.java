// Generated by data binding compiler. Do not edit!
package com.icarus.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.icarus.R;
import com.icarus.viewmodels.DashboardViewModel;
import com.icarus.workorder.models.WorkOrderItems;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ItemWorkorderBinding extends ViewDataBinding {
  @NonNull
  public final AppCompatTextView assignedTo;

  @NonNull
  public final AppCompatTextView dueDate;

  @NonNull
  public final AppCompatTextView newTitle;

  @NonNull
  public final AppCompatTextView title;

  @NonNull
  public final View view;

  @NonNull
  public final AppCompatTextView workorderId;

  @Bindable
  protected DashboardViewModel mViewModel;

  @Bindable
  protected WorkOrderItems mItem;

  protected ItemWorkorderBinding(Object _bindingComponent, View _root, int _localFieldCount,
      AppCompatTextView assignedTo, AppCompatTextView dueDate, AppCompatTextView newTitle,
      AppCompatTextView title, View view, AppCompatTextView workorderId) {
    super(_bindingComponent, _root, _localFieldCount);
    this.assignedTo = assignedTo;
    this.dueDate = dueDate;
    this.newTitle = newTitle;
    this.title = title;
    this.view = view;
    this.workorderId = workorderId;
  }

  public abstract void setViewModel(@Nullable DashboardViewModel viewModel);

  @Nullable
  public DashboardViewModel getViewModel() {
    return mViewModel;
  }

  public abstract void setItem(@Nullable WorkOrderItems item);

  @Nullable
  public WorkOrderItems getItem() {
    return mItem;
  }

  @NonNull
  public static ItemWorkorderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_workorder, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ItemWorkorderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ItemWorkorderBinding>inflateInternal(inflater, R.layout.item_workorder, root, attachToRoot, component);
  }

  @NonNull
  public static ItemWorkorderBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.item_workorder, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ItemWorkorderBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ItemWorkorderBinding>inflateInternal(inflater, R.layout.item_workorder, null, false, component);
  }

  public static ItemWorkorderBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ItemWorkorderBinding bind(@NonNull View view, @Nullable Object component) {
    return (ItemWorkorderBinding)bind(component, view, R.layout.item_workorder);
  }
}
